@startuml

class Gladiador {
    - seniority: Seniority
    - equipamiento: Equipamiento
    - turno: Turno
    - energia: Energia

    -ascenderSeniority():Seniority
    - recuperarEnergia()
    + obtenerElemento(e: Elemento)
    +jugarTurno(d: DispositivoDeAzar)
    +finalizarTurno()
    +moverse(m: Mapa, p: Posicion)
}

interface DispositivoDeAzar{
    tirar(): Posicion
}

class Dado {
    tirar(): Posicion
}

interface Seniority{
    +ascensoSeniority()
    +energiaEnergia(e: Energia)
}

class Energia{
    -energia: int

    recuperarEnergia()
}

class Novato {
    +ascensoSeniority()
    +plusEnergia(energia: Energia)
}

class SemiSenior {
    ascensoSeniority()
    plusEnergia(energia: Energia)
}
class Senior {
    ascensoSeniority()
    plusEnergia(energia: Energia)
}

Gladiador *-- Seniority

Novato  ..> SemiSenior
SemiSenior  ..> Senior


Seniority <|.. Novato
Seniority <|.. SemiSenior
Seniority <|.. Senior

Gladiador .> DispositivoDeAzar

' Gladiador --> Premios

' Premios <|.. Comida

' Equipamientos --> Premios

' Gladiador --> Energia
' Turno --> Energia

Seniority .> Energia


Dado ..|> DispositivoDeAzar






@enduml