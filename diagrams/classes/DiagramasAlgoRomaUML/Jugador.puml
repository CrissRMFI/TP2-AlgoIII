@startuml

interface SistemaDeTurnos {
    + finalizarTurno(): void
    + perderTurnos(): void
    + habilitar(): boolean
}

interface SistemaDeDefensa {
    + recibirDanio(energia: Energia): void
    + defenderse(): void
    + equipar(): void
    + esEquipoMaximo(): boolean
}

interface JugadorGanador {
    + yoSoy(): String
}

Jugador ..|> SistemaDeTurnos
Jugador ..|> SistemaDeDefensa
Jugador ..|> JugadorGanador

abstract class Jugador{
    #energia: Energia
    #dispositoDeAzar: dispositivoDeAzar
    #turno: Turno
    #nombre: String
    #casillero: Casillero
    +afectarEnergia(energia: Energia)
    +compararSalud(energia: Energia)
    +habilitar()
    +agregarDispositivoAzar(dispositivoDeAzar: DispositivoDeAzar)
    +lanzar(): ValorAzar
    +yoSoy(): String
    +posicionar(casillero: Casillero)
    +{abstract}moverse()
    +compararPosicion(casillero: Casillero): boolean
    +{abstract}finalizarTurno (algoRoma: AlgoRoma);
    +{abstract}miDescripcion(): String
    +{abstract}obtenerElementos();
}

@enduml